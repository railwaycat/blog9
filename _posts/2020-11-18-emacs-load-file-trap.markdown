---
title: Emacs load file 的坑
layout: post
date: 2020-11-22 22:50:22 -0500
yun: 养
comments: true
tags: Emacs
---

最近翻修了一下 Emacs 的配置，从 helm 迁移到了 ivy。这种折腾事儿虽然不是第一次干，但这次至少是认真读了一遍 ivy 的文档，梳理了一遍 ivy 的操作逻辑，也认真为自己常用的工作流做了配置。阅读和配置的心得下次再说，这篇文章专注于遇到的一个神秘坑。

写完配置，在远程机器上做全新安装的时候我遇到了一个特别诡异的问题：我绝大部分的包是用 `use-package` 从 GNU elpa 和 melpa 上自动安装的， Emacs 第一次启动的时候总是不能安装完所有的包，但也没有任何错误信息，需要我关掉 Emacs，第二次再打开的时候，它才能把剩下的包安装完。

完全没思路，只好上二分法验证了…最终验证的结果是 package.el 和 ivy 的搭配，只要这两个中任意一个换成其他选项，比如 package.el 换成 el-get、ivy 换成 helm，都不能复现这个问题。

所以现象知道了，但到底是什么原因呢？

我在网上搜了搜也完全没发现有其他人遇到这个问题。不过至少这证明了不是 package.el 或者 ivy 的 bug，应该还是我自己配置文件的问题。

虽然一点思路都没有，不过这个问题只影响第一次的配置。只要第一次配置的时候不厌其烦地打开关闭两次，后面使用的时候就一切正常。那就这么先用着吧…

这一过就是小几个月，直到我上周清空 MacBook 重新安装系统之前，备份文件的时候忽然注意到自己 `$HOME` 目录下多出来一个 `.elpa` 文件夹，里面是一部分安装好的包。看了看创建的时间，跟上次翻修配置的时间也对得上。感觉自己离真相已经很近了。

拿 `.elpa` 当 keyword 在配置目录里搜了一遍，找到了这个文件 `ivy/elpa.el`。而这个文件里指定了 elpa 的安装目录为 `~/.elpa/%s/elpa`。

感觉很接近了。

我目前配置文件的组织方式是按照大体的功能，配置分散在一系列 `.el` 文件中，然后用 `(load "filename")` 去加载——对，这里偷了个懒，没有把每个文件写成 `provide - require` 的组合。另外我 elpa 的配置是写在一个名叫 `elpa.el` 的文件里的。同时 use-package 在安装包的时候会自动把每个包的目录都加到 `load-path` 里，这样 `load-path` 里又会存在一个来自 ivy 的 `elpa.el` 文件。正是这个来自 ivy 的 `elpa.el` 把 elpa 的安装目录改到了 `~/.elpa` 然后还多跑了一次 `package-initialize`。

我觉得中间还有一个环节没有接上，那就是为什么只有安装的时候 ivy 的 `elpa.el` 文件才会被加载。我的推测是 package.el 在安装的时候会扫描每一个文件来生成 autoloads 列表，而安装好之后就不再需要每次启动的时候都加载包目录下的每一个文件了。这个疑问只有什么时候花点时间去读 package.el 才能知道了。

按照这个思路验证下来，只要我把自己配置文件中的 `elpa.el` 改个其他的名字，这个 bug 就不会再出现了。当然根本的解决方法是把 load file 换成 `provide - require` 的组合。算是自己偷懒的一个教训吧。
